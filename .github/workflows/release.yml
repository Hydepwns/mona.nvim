name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Lua 5.4
      run: |
        sudo apt-get update
        sudo apt-get install -y lua5.4 lua5.4-dev luarocks
        echo "Lua 5.4 and luarocks installed"

    - name: Setup Neovim
      run: |
        curl -L https://github.com/neovim/neovim/releases/download/v0.10.0/nvim-linux64.tar.gz | tar xz
        sudo mv nvim-linux64/bin/nvim /usr/local/bin/
        sudo mv nvim-linux64/lib/nvim /usr/local/lib/
        sudo mv nvim-linux64/share/nvim /usr/local/share/

    - name: Install dependencies
      run: |
        # Debug: Check what's available
        which lua
        lua -v
        which luarocks
        luarocks --version
        
        # Install dependencies with fallback
        luarocks install --local luacov || echo "luacov installation failed, trying alternative"
        luarocks install --local plenary.nvim || echo "plenary.nvim installation failed, skipping"
        eval "$(luarocks path --bin)"

    - name: Run tests
      run: |
        eval "$(luarocks path --bin)"
        make test

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this release
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ### Git
          ```lua
          {
            "hydepwns/mona.nvim",
            lazy = false,
            build = ":MonaInstall variable all",
            opts = {
              -- Your configuration here
            }
          }
          ```
          
          ### LuaRocks
          ```bash
          luarocks install mona.nvim
          ```
        draft: false
        prerelease: false

    - name: Publish to LuaRocks
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        # Extract version from tag (e.g., v0.1.3 -> 0.1.3)
        VERSION=${GITHUB_REF#refs/tags/v}
        ROCKSPEC="mona.nvim-${VERSION}-1.rockspec"
        
        echo "Publishing $ROCKSPEC to LuaRocks..."
        
        # Check if rockspec exists
        if [ ! -f "$ROCKSPEC" ]; then
          echo "Error: $ROCKSPEC not found"
          exit 1
        fi
        
        # Validate rockspec
        luarocks validate "$ROCKSPEC"
        
        # Upload to LuaRocks (requires API key)
        if [ -n "${{ secrets.LUAROCKS_API_KEY }}" ]; then
          echo "Uploading to LuaRocks..."
          luarocks upload "$ROCKSPEC" --api-key "${{ secrets.LUAROCKS_API_KEY }}"
        else
          echo "Warning: LUAROCKS_API_KEY not set, skipping LuaRocks upload"
          echo "To enable automatic LuaRocks publishing, add LUAROCKS_API_KEY to repository secrets"
        fi 